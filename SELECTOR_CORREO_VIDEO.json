{
  "name": "SELECTOR DE CORREOS",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            },
            {
              "hour": 12,
              "minute": 1
            }
          ]
        },
        "simple": false,
        "filters": {
          "labelIds": [
            "INBOX",
            "UNREAD"
          ]
        },
        "options": {
          "downloadAttachments": true
        }
      },
      "id": "f5bec145-eb2c-4596-87ca-e0d106fbe40e",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.1,
      "position": [
        620,
        500
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "Kd4SL28WS6IbVNRy",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1c9JCrQ9EbQr6onRi1IPj9rHGuJ_2SAmqHbf6hndx8Y4",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "REGISTROS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1c9JCrQ9EbQr6onRi1IPj9rHGuJ_2SAmqHbf6hndx8Y4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Fecha de Recepción": "={{ $json['Fecha de Recepción'] }}",
            "Correo del Cliente": "={{ $json['Correo del Cliente'] }}",
            "Nombre del Cliente": "={{ $json['Nombre del Cliente'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Fecha de Recepción",
              "displayName": "Fecha de Recepción",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre del Cliente",
              "displayName": "Nombre del Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Correo del Cliente",
              "displayName": "Correo del Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Teléfono del Cliente",
              "displayName": "Teléfono del Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Asunto",
              "displayName": "Asunto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Mensaje",
              "displayName": "Mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Categoría de Consulta",
              "displayName": "Categoría de Consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Prioridad",
              "displayName": "Prioridad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estado",
              "displayName": "Estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Fecha de Respuesta",
              "displayName": "Fecha de Respuesta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Respuesta Automática",
              "displayName": "Respuesta Automática",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Agente Asignado",
              "displayName": "Agente Asignado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Notas del Agente",
              "displayName": "Notas del Agente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Enlace a Documento o Archivo",
              "displayName": "Enlace a Documento o Archivo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Última Actualización",
              "displayName": "Última Actualización",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d227c9bf-c17a-458b-bcf3-8d8770d6e4f7",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1460,
        780
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JkqnbcF2xf75asG1",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8bf38772-2d92-4c14-9ad1-b6dffbc1295a",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "CORREO_PROMOCIONAL",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b09a9a51-8adb-411d-83f6-8102978f9976",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1760,
        800
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.appsheet.com/api/v2/apps/28523808-32e0-4dfc-899c-ba3eea8bfb4d/tables/REGISTROS/Action?applicationAccessKey=V2-MSGGu-KxfhN-yRkWb-tkemR-wqSjk-K2vFw-71N2z-Myljc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"Action\": \"Add\",\n  \"Properties\": {\n\"Locale\": \"es-CO\",\n\"Timezone\": \"America/Bogota\"\n  },\n  \"Rows\": [\n    {\n\"Nombre del Cliente\": \"{{ $json['Nombre del Cliente'] }}\",\n\"Correo del Cliente\": \"{{ $json['Correo del Cliente'] }}\",\n\"Teléfono del Cliente\": \"{{ $json['Teléfono del Cliente'] }}\",\n\"Asunto\": \"{{ $json.Asunto }}\",\n\"Mensaje\": \"{{ $json.Mensaje }}\",\n\"Categoría de Consulta\": \"{{ $json['Categoría de Consulta'] }}\",\n\"Prioridad\": \"{{ $json.Prioridad }}\",\n\"Estado\": \"{{ $json.Estado }}\",\n\"Fecha de Respuesta\": \"{{ $json['Fecha de Respuesta'] }}\",\n\"Enlace a Documento o Archivo\": \"\",\n\"Última Actualización\": \"\"\n      \n    }\n  ]\n}",
        "options": {}
      },
      "id": "1d831f43-7924-43d9-98d3-53305ba55886",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1980,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = $input.first();\n\n// Función para limpiar el texto\nfunction cleanText(text) {\n    if (typeof text !== 'string') return text;\n    return text\n        .replace(/\\\\n/g, ' ')         // Reemplaza \\n con espacio\n        .replace(/\\n/g, ' ')          // Reemplaza saltos de línea reales con espacio\n        .replace(/\\\\r/g, ' ')         // Reemplaza \\r con espacio\n        .replace(/\\r/g, ' ')          // Reemplaza retornos de carro reales con espacio\n        .replace(/\\s+/g, ' ')         // Reemplaza múltiples espacios con uno solo\n        .replace(/\\\\\"/g, '\"')         // Maneja comillas escapadas\n        .replace(/\\\\/g, '')           // Elimina backslashes restantes\n        .trim();                      // Elimina espacios al inicio y final\n}\n\n// Función para limpiar recursivamente un objeto\nfunction cleanObject(obj) {\n    if (typeof obj !== 'object' || obj === null) {\n        return cleanText(obj);\n    }\n    \n    if (Array.isArray(obj)) {\n        return obj.map(item => cleanObject(item));\n    }\n    \n    const cleanObj = {};\n    for (const [key, value] of Object.entries(obj)) {\n        cleanObj[key] = cleanObject(value);\n    }\n    return cleanObj;\n}\n\ntry {\n    // Si el mensaje viene como string JSON, intentamos parsearlo\n    if (inputData?.json?.message?.content) {\n        let content = inputData.json.message.content;\n        \n        // Si es string, limpiamos antes de parsear\n        if (typeof content === 'string') {\n            content = cleanText(content);\n            try {\n                const parsedContent = JSON.parse(content);\n                return cleanObject(parsedContent);\n            } catch (parseError) {\n                // Si no se puede parsear, retornamos el contenido limpio\n                return content;\n            }\n        }\n        // Si no es string, limpiamos el objeto directamente\n        return cleanObject(content);\n    }\n    \n    // Si no hay message.content, limpiamos todo el objeto de entrada\n    return cleanObject(inputData.json);\n    \n} catch (error) {\n    console.log('Error procesando datos:', error);\n    // Como último recurso, retornamos los datos originales\n    return inputData.json;\n}"
      },
      "id": "0b098336-d48e-401e-b810-e4c19c74b478",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        500
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "labelIds": [
            "INBOX"
          ]
        }
      },
      "id": "7ed4cb1a-5f84-41a1-8da7-b3329e2a7ff5",
      "name": "Gmail Trigger1",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        640,
        940
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "Kd4SL28WS6IbVNRy",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  json: {\n    id: $json.id,\n    labels: JSON.stringify($json.labelIds),\n    from: $json.from.text, // Usamos .text para obtener el formato correcto del remitente\n    subject: $json.subject,\n    snippet: $json.text.substring(0, 200), // Tomamos los primeros 200 caracteres como snippet\n    date: $json.date, // Agregamos la fecha para el timestamp\n    // Agregamos el mensaje completo por si se necesita analizar el contenido\n    fullMessage: $json.text\n  }\n};"
      },
      "id": "087b9adc-c0c7-4688-b156-afa0caa7a525",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        220
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            },
            {
              "hour": 12,
              "minute": 1
            }
          ]
        },
        "simple": false,
        "filters": {
          "labelIds": [
            "INBOX"
          ]
        },
        "options": {
          "downloadAttachments": true
        }
      },
      "id": "811f074c-5e1c-4708-869f-798e2777098e",
      "name": "Gmail Trigger2",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.1,
      "position": [
        580,
        220
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "Kd4SL28WS6IbVNRy",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.appsheet.com/api/v2/apps/28523808-32e0-4dfc-899c-ba3eea8bfb4d/tables/REGISTROS/Action?applicationAccessKey=V2-MSGGu-KxfhN-yRkWb-tkemR-wqSjk-K2vFw-71N2z-Myljc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"Action\": \"Add\",\n  \"Properties\": {\n  },\n  \"Rows\": [\n    {\n\"Nombre del Cliente\": \"{{ $json['Nombre del Cliente'] }}\",\n\"Correo del Cliente\": \"{{ $json['Correo del Cliente'] }}\",\n\"Teléfono del Cliente\": \"{{ $json['Teléfono del Cliente'] }}\",\n\"Asunto\": \"{{ $json.Asunto }}\",\n\"Mensaje\": \"{{ $json.Mensaje }}\",\n\"Categoría de Consulta\": \"{{ $json['Categoría de Consulta'] }}\",\n\"Prioridad\": \"{{ $json.Prioridad }}\",\n\"Estado\": \"{{ $json.Estado }}\",\n\"Fecha de Respuesta\": \"{{ $json['Fecha de Respuesta'] }}\",\n\"Enlace a Documento o Archivo\": \"\",\n\"Última Actualización\": \"\"\n      \n    }\n  ]\n}",
        "options": {}
      },
      "id": "4fac799b-1062-4434-8453-263bbff6bd2c",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1800,
        220
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = $input.first();\nconsole.log('Input data:', JSON.stringify(inputData, null, 2));\n\n// Veamos la estructura completa del input\nconsole.log('Input structure:', {\n    hasJson: !!inputData.json,\n    jsonLength: inputData.json ? inputData.json.length : 0,\n    fullStructure: JSON.stringify(inputData, null, 2)\n});\n\n// Si hay datos, intentemos acceder directamente al mensaje\nif (inputData && inputData.json) {\n    console.log('Message content:', JSON.stringify(inputData.json.message, null, 2));\n}\n\n// Intentemos un enfoque diferente\ntry {\n    const content = inputData.json.message.content;\n    const parsedContent = JSON.parse(content);\n    console.log('Successfully parsed:', parsedContent);\n    return parsedContent;\n} catch (error) {\n    console.log('Error details:', error);\n    // Como fallback, retornemos los datos sin procesar\n    return inputData.json;\n}"
      },
      "id": "e17b03e5-b548-4387-904a-af76b3317c3a",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        220
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Eres un asistente especializado en clasificar correos electrónicos. Analiza cada correo y determina si es promocional o una solicitud genuina que requiere atención. \n\nRecibirás los datos en este formato:\nid:{{ $json.id }}\nLabels: {{$json.labels}}\nFrom: {{$json.from}}\nSubject: {{$json.subject}}\nSnippet: {{$json.snippet}}\nFullMessage: {{$json.fullMessage  }}\n\nREGLAS DE CLASIFICACIÓN:\nSi encuentras CUALQUIERA de estos indicadores, responde únicamente \"CORREO_PROMOCIONAL\":\n\n1. ETIQUETAS:\n- Contiene \"CATEGORY_PROMOTIONS\"\n- Contiene \"CATEGORY_SOCIAL\"\n- Contiene \"CATEGORY_UPDATES\"\n\n2. REMITENTE:\n- Dirección contiene: info@, marketing@, noreply@, news@, notifications@\n\n3. ASUNTO/CONTENIDO:\n- Contiene palabras como: newsletter, subscribe, unsubscribe, webinar\n- Frases como: \"View as Web Page\", \"Don't miss\", \"latest news\"\n- Referencias a eventos, conferencias o actualizaciones masivas\n\nSi NO es un correo promocional, proporciona la siguiente estructura JSON:\n{\n    \"ID\": \"[id del correo]\",\n    \"Fecha de Recepción\": \"[timestamp en ISO]\",\n    \"Nombre del Cliente\": \"[extraído del From]\",\n    \"Correo del Cliente\": \"[email extraído del From]\",\n    \"Teléfono del Cliente\": \"[si se encuentra en el contenido]\",\n    \"Asunto\": \"[asunto original]\",\n    \"Mensaje\": \"[fullMessage]\",\n    \"Categoría de Consulta\": \"[Soporte Técnico/Facturación/Ventas/Reclamos/General]\",\n    \"Prioridad\": \"[Alta/Media/Baja]\",\n    \"Estado\": \"Nuevo\",\n    \"Fecha de Respuesta\": \"\",\n    \"Respuesta Automática\": \"\",\n    \"Agente Asignado\": \"\",\n    \"Notas del Agente\": \"\",\n    \"Enlace a Documento o Archivo\": \"\",\n    \"Última Actualización\": \"[timestamp actual]\"\n}\n\nCRITERIOS DE PRIORIDAD:\n- Alta: contiene palabras como \"urgente\", \"emergencia\", \"crítico\"\n- Media: consultas técnicas o tiene etiqueta \"IMPORTANT\"\n- Baja: consultas generales e informativas\n\nCATEGORÍAS DE CONSULTA:\n- Soporte Técnico: problemas técnicos, errores, fallas\n- Facturación: pagos, facturas, cobros\n- Ventas: cotizaciones, precios, productos\n- Reclamos: quejas, problemas de servicio\n- General: otras consultas que no encajen en las anteriores\n\nEJEMPLO DE ENTRADA:\nid: 192d68641a0c3ac9\nLabels: [{\"id\":\"INBOX\",\"name\":\"INBOX\"},{\"id\":\"IMPORTANT\",\"name\":\"IMPORTANT\"},{\"id\":\"CATEGORY_PERSONAL\",\"name\":\"CATEGORY_PERSONAL\"},{\"id\":\"UNREAD\",\"name\":\"UNREAD\"}]\nFrom: \"LORENA HERNANDEZ LOPEZ <lorena1056hernandezlop@gmail.com>\"\nSubject: \"PQRS\"\nSnippet: \"Petición de amor Lorena Hernandez Lopez\"\n\nEJEMPLO DE RESPUESTA CORRECTA (para correo no promocional):\n{\n    \"ID\": \"192d68641a0c3ac9\",\n    \"Fecha de Recepción\": \"2024-02-28T15:25:10Z\",\n    \"Nombre del Cliente\": \"LORENA HERNANDEZ LOPEZ\",\n    \"Correo del Cliente\": \"lorena1056hernandezlop@gmail.com\",\n    \"Teléfono del Cliente\": \"\",\n    \"Asunto\": \"PQRS\",\n    \"Mensaje\": \"Petición de amor Lorena Hernandez Lopez\",\n    \"Categoría de Consulta\": \"General\",\n    \"Prioridad\": \"Media\",\n    \"Estado\": \"Nuevo\",\n    \"Fecha de Respuesta\": \"\",\n    \"Respuesta Automática\": \"\",\n    \"Agente Asignado\": \"\",\n    \"Notas del Agente\": \"\",\n    \"Enlace a Documento o Archivo\": \"\",\n    \"Última Actualización\": \"[timestamp actual]\"\n}\n\nIMPORTANTE:\n1. NO proporciones explicaciones adicionales\n2. SOLO responde \"CORREO_PROMOCIONAL\" o el JSON estructurado\n3. Si es promocional, SOLO responde \"CORREO_PROMOCIONAL\"\n4. Si hay error al procesar los datos, responde \"ERROR_PROCESAMIENTO\""
            }
          ]
        },
        "options": {}
      },
      "id": "cb89c466-49fe-4ceb-90c2-6b2729accd9f",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [
        1080,
        220
      ],
      "credentials": {
        "openAiApi": {
          "id": "2dYQGLulSXWiw9O7",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  json: {\n    id: $json.id,\n    labels: JSON.stringify($json.labelIds),\n    from: $json.from.text, // Usamos .text para obtener el formato correcto del remitente\n    subject: $json.subject,\n    snippet: $json.text.substring(0, 200), // Tomamos los primeros 200 caracteres como snippet\n    date: $json.date, // Agregamos la fecha para el timestamp\n    // Agregamos el mensaje completo por si se necesita analizar el contenido\n    fullMessage: $json.text\n  }\n};"
      },
      "id": "be34f1e0-6828-49db-a54d-e2339235fdeb",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        500
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Eres un asistente especializado en clasificar correos electrónicos médicos. Tu objetivo es analizar profundamente el contexto, intención y urgencia real de cada mensaje.\n\nFORMATO DE ENTRADA:\nid:{{ $json.id }}\nLabels: {{$json.labels}}\nFrom: {{$json.from}}\nSubject: {{$json.subject}}\nSnippet: {{$json.snippet}}\nFullMessage: {{$json.fullMessage}}\n\nREGLAS DE CLASIFICACIÓN PROMOCIONAL:\nResponde \"CORREO_PROMOCIONAL\" si detectas:\n1. INDICADORES DIRECTOS:\n- Labels promocionales (CATEGORY_PROMOTIONS, CATEGORY_SOCIAL, CATEGORY_UPDATES)\n- Remitentes masivos (info@, marketing@, noreply@, news@, notifications@)\n- Términos promocionales (newsletter, subscribe, unsubscribe, webinar)\n\n2. PATRONES DE CONTENIDO PROMOCIONAL:\n- Ofertas o descuentos\n- Invitaciones masivas a eventos\n- Boletines informativos\n- Campañas de marketing\n- Comunicaciones masivas no personalizadas\n\nPara correos NO promocionales, responde con este JSON (evita estos caracteres al inicio y al final ```json\\n):\n{\n    \"Nombre del Cliente\": \"[nombre completo]\",\n    \"Correo del Cliente\": \"[email]\",\n    \"Teléfono del Cliente\": \"[número si existe]\",\n    \"Asunto\": \"[asunto original]\",\n    \"Mensaje\": \"[contenido completo]\",\n    \"Categoría de Consulta\": \"[categoría]\",\n    \"Prioridad\": \"[nivel]\",\n    \"Estado\": \"Nuevo\"\n}\n\nANÁLISIS PROFUNDO DE CATEGORIZACIÓN:\n\nCITAS MÉDICAS:\n- Solicitudes de agendamiento\n- Cambios o cancelaciones\n- Consultas sobre horarios disponibles\n- Verificación de citas existentes\n- Seguimientos post-consulta\n- Preparaciones para citas\n\nAUTORIZACIONES:\n- Solicitudes de procedimientos\n- Autorizaciones de medicamentos\n- Órdenes médicas\n- Validaciones de cobertura\n- Renovaciones de tratamientos\n- Aprobaciones de especialistas\n\nFACTURACIÓN:\n- Consultas de pagos\n- Estados de cuenta\n- Planes de pago\n- Copagos y deducibles\n- Reembolsos\n- Facturas pendientes\n- Cobertura de seguros\n\nRECLAMOS:\n- Quejas sobre servicio\n- Demoras en atención\n- Problemas con personal médico\n- Inconformidades con tratamientos\n- Solicitudes de cambio de médico\n- Problemas de acceso a servicios\n\nGENERAL:\n- Consultas informativas\n- Solicitudes de documentación\n- Actualización de datos\n- Certificaciones\n- Historias clínicas\n\nCRITERIOS DE PRIORIDAD:\n\nALTA:\n- Menciones explícitas de urgencia o emergencia\n- Síntomas graves o dolor intenso\n- Medicamentos críticos o de control\n- Tratamientos en curso que no pueden interrumpirse\n- Situaciones que afectan calidad de vida inmediata\n- Casos relacionados con embarazo o enfermedades crónicas\n- Referencias a condiciones que requieren atención inmediata\n\nMEDIA:\n- Autorizaciones regulares\n- Medicamentos de mantenimiento\n- Citas de seguimiento importantes\n- Etiquetado como IMPORTANT\n- Situaciones que requieren atención pero no son críticas\n- Consultas de especialistas no urgentes\n- Trámites administrativos importantes\n\nBAJA:\n- Consultas generales\n- Solicitudes de información\n- Trámites administrativos rutinarios\n- Actualizaciones de datos\n- Solicitudes de documentación no urgente\n- Seguimientos de rutina\n\nANÁLISIS CONTEXTUAL:\n1. Evaluar el tono y urgencia real del mensaje\n2. Identificar palabras clave en contexto\n3. Analizar la naturaleza del problema o solicitud\n4. Considerar el impacto en la salud del paciente\n5. Evaluar la inmediatez requerida de respuesta\n6. Identificar si hay documentación o seguimiento pendiente\n7. Considerar el historial de interacciones si está disponible\n"
            }
          ]
        },
        "options": {}
      },
      "id": "1b1e7edf-61c7-4064-a6fd-1b081e080838",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [
        1100,
        500
      ],
      "credentials": {
        "openAiApi": {
          "id": "2dYQGLulSXWiw9O7",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2f6704ea-89ac-4bde-905b-d7aa71b1c47d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b38170b8d851a2d7a677391dd9471131a98fa71876b94a9ee4ba97437a05ffc2"
  },
  "id": "z8qhlkKUUQWzo04Q",
  "tags": []
}
